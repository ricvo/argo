# add here few words about what is the purpose of this experiment
# keep only one experiment per file

##############################################################
[

{
"dataName" : "Boston",  #database name
"binary" : 0,          #we have two version of MNIST, continuous and binarized, use the continuous
"stochastic" : 0,      #ignore this for the moment

#"preproc": ['minmax','scale','sphere'],
"preproc": ['scale'],

},
{

"task" : "regression",

"stochastic" : [0],
"stochastic_noise_param" : [0],

# "learning_rate" : [0.001, 0.002],
"learning_rate" : [0.5,0.001,0.0001,0.00001,0.000001,0.0000001],

"bit_flip" : [0],

"drop_out" : [0],

"batch_size" : [354],
"batch_size_test" : [152],

"network_architecture" : [ ({"type" : "D", "size" : 52}, # http://www.science.smith.edu/dftwiki/index.php/Tutorial:_Playing_with_the_Boston_Housing_Data
                            {"type" : "D", "size" : 39},
                            {"type" : "D", "size" : 26},
                            {"type" : "D", "size" : 13}),
			   ({"type" : "D", "size" : 50}), # see http://neupy.com/2015/07/04/boston_house_prices_dataset.html	    
                           ({"type" : "D", "size" : 5}, # see https://datascienceplus.com/fitting-neural-network-in-r/
			    {"type" : "D", "size" : 3})
			     ],

"regularizer" : [0],
#"weights_init" : [VAE.xavier_init, VAE.normal_init, VAE.relu_init],
#"weights_init" : ["normal_init"],
#"weights_init" : ["xavier_init", "normal_init"],
"bias_init_value" : [0.01],
"weights_init" : ["normal_init"],
#"transfer_fct" : ["relu"],
"activation_fct" : ["sigmoid","relu","elu"],
"epochs" : 60000,
},
{
"check_ops" : 0,
#"log_txt" : 0,

"n_epoch_log" : 10,
"n_epoch_plot" : 100,

"save_model" : 1,
"n_epoch_save_model" : 5000,

"log_gradient" : 0,
"n_epoch_log_gradient" : 10,

"log_predict_actual" : 0,
"n_epoch_log_predict_actual" : 1000,

"log_tf" : 0,
"verbose" : 1,

"launcher": "FeedForwardLauncher",

"dirName" : "./logs",

"seed" : 0,
"runs" : 1,


"nodes" : [{"used_GPUs" : {3},
            "cores_per_GPU" : 1,
            "IP": "localhost"   #  num_consumers = multiprocessing.cpu_count() * 2
            }
            ]

}
]
