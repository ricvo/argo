# add here few words about what is the purpose of this experiment
        # keep only one experiment per file

        ##############################################################
[
{
    "dataName" : "CaltechSilhouettes",
            #"data_dir": "/home/csongor/tmp/",
            "type": ["16","28"][1],
    "binary" : 1,
    #"stochastic" : 1,
    "flip_fraction" : 0.,
    "vect" : False  # False if starting with convolutional, True will give the dataset already vectorialized (reshaped -1)
},
{

"model" : ["HM.HM"],
#"grad_clipping" : ("clip_by_norm", {"value" : 500}),
"grad_clipping" : (None, {}),
"clip_probs": 1e-6,
#"grad_clipping" : [x for x in [("clip_by_global_norm", {"value" : 100}),("clip_by_global_norm", {"value" : 10}), ("clip_by_value", {"value" : 10}), ("clip_by_norm", {"value" : 10}) ]],
"note" : "LR",
"stochastic" : [0],
"stochastic_noise_param" : [0.001], #0, ,0.00001,0.001,0.1,1

"denoising" : [0],

"optimizer": [(opt, {"learning_rate" : lr,  "individual_learning_rate": ilr, "rescale_learning_rate": rl, "diagonal_pad": dp, "q_baseline":False,"k_step_update": ks})
                for opt in ["WakeSleepOptimizer","ReweightedWakeSleepOptimizer", "NaturalWakeSleepOptimizerAlternate", "NaturalReweightedWakeSleepOptimizerAlternate"]
                for lr in [0.02]
                for ilr in [1.0]
                for rl in [1.0]
                for dp in [0.1]
                for ks in [0,5,20,50,100,500,1000][2:3]],

"cost_function": [("HMLogJointLikelihoodRWS", {})],

"batch_size_train" : 32,
"batch_size_eval" : [i for i in [100]],

"samples" : [1,3,5][2:3], # 1 or more
"covariance_parameterization" : "softplus", # "exp" or "softplus"

"network_architecture" : [{
    "layers": ll,
    } for ll in [[300,100,50,10]]
],

        #"weights_reg" : [("contrib.layers.l2_regularizer", {"scale" : 0.5})],
        #"bias_reg" : [("contrib.layers.l2_regularizer",    {"scale" : 0.5})],

"weights_reg" : [None],
"bias_reg" :    [None],
#"weights_init": [i for i in [("glorot_normal_initializer",{})]],
#"weights_init": [i for i in [("truncated_normal_initializer",{"mean":0.0,"stddev": 0.1})]],

#"weights_init" : [("constant_initializer", {'value' : 0.1})],  # !!! truncated normal
"weights_init" : [("glorot_normal_initializer",{})],  # !!! truncated normal
"bias_init" : [("constant_initializer", {'value' : 0.1})],

"activation" : ["elu"],
"epochs" : 500,

},
{
"check_ops" : 0,

# choose steps or epochs
"time_reference" : "epochs",
#"time_reference" : "steps",

# choose to save the model every n steps
"save_model" : 1,
"save_model_period" : 100, #0.1,

# how often to log stats (txt) and save summaries
"save_summaries" : 1,
"save_summaries_period" : 10,
"stats_period" : 10,

# skips the first k stats for the plot
"plot_offset" : 1,



"GradientsHook" : {"period" : 10},

"ImagesInputHook" : {"period" : 100,
                "how_many" : 20,
                "n_images_columns" : 20},

"ImagesReconstructHook" : {"period" : 100,
                "n_images_columns" : 16,
                "images_indexes" : {
                "train" : [0,10,20,30,40,50,110,120,130,140,150,210,220,230,240,250],
                "validation" : [0,10,20,30,40,50,110,120,130,140],},
        },

"ImagesGenerateHook" : {"period" : 100,
                "n_images_columns" : 10,
                "n_gen_samples" : 100},

"LogpImportanceSamplingHook" : {"period" : 100,
                                "n_samples" : [1, 10,100, 1000],
                                "batch_size" : 10,
                                "repetitions" : 1
                       	       },
#"dirName" : "/ssd_data",
"dirName" : "/data1/csongor/CaltechSilhouettes/SOA2",
#"dirName" : "temp",

"seed" : 0,
"runs" : 1,

"nodes" : [{"used_GPUs" : {0,2},
    "cores_per_GPU" : 2,
    "IP": "localhost"   #  num_consumers = multiprocessing.cpu_count() * 2
    }],

}]

