# add here few words about what is the purpose of this experiment
# keep only one experiment per file

##############################################################
[
{
"dataName" : "Frey",
"binary" : 0,
"stochastic" : 1,
},
{

"model" : ["VAE.VAE"], #"VAE_IAF.VAE_IAF"
"grad_clipping" : ("clip_by_global_norm", {"value" : 3}), # NB not implemented in the filename


I SEE OLD STUFFS RECHECK ALL down here...
"synthetic" : 0,
"stochastic" : 1,
"stochastic_noise_param" : [0.1, 0.01, 0], # 0.001,

"warm_up_method" : [0],
"epsilon_z" : [0], # 0.001, , 0.1, 0.01
"epsilon_x" : [0.1, 0.01, 0], #2, 1 , 0.1, 0.2, 0.1, 0.01, 0.001

"cost_function": [{"cost" : 0, "lambda" : 1.0},
		  {"cost" : 1, "lambda" : 1.0, "h" : 0.005},
		  {"cost" : 1, "lambda" : 1.0, "h" : 0.01},
		  {"cost" : 1, "lambda" : 1.0, "h" : 0.1}],

"learning_rate" : [0.0001], #, 0.00001],
"samples" : [10],
"bit_flip" : [0],
"drop_out" : [0],
"batch_size" : [100],

"network_architecture" : [ {"encoder" : [{"type" : "dense", "size" : 200},
			                 {"type" : "dense", "size" : 200}],
	   		    "stochastic_latent" : [{"type" : "GaussianDiagonal", "size" : 25}],
			    "decoder" : [{"type" : "dense", "size" : 200},
			                  {"type" : "dense", "size" : 200}],
		            "stochastic_visible" : [{"type" : "GaussianDiagonalZeroOne"}]},
			    {"encoder" : [{"type" : "dense", "size" : 200},
			                 {"type" : "dense", "size" : 200}],
	   		    "stochastic_latent" : [{"type" : "GaussianDiagonal", "size" : 35}],
			    "decoder" : [{"type" : "dense", "size" : 200},
			                  {"type" : "dense", "size" : 200}],
		            "stochastic_visible" : [{"type" : "GaussianDiagonalZeroOne"}]}
			 ],

''',
			    {"encoder" : [{"type" : "dense", "size" : 200},
			                 {"type" : "dense", "size" : 200}],
	   		    "stochastic_latent" : [{"type" : "GaussianDiagonal", "size" : 25}],
			    "decoder" : [{"type" : "dense", "size" : 200},
			                  {"type" : "dense", "size" : 200}],
		            "stochastic_visible" : [{"type" : "LogitNormalDiagonal"}]
'''

"rescale" : [0.001], # rescale for continuous datasets

"regularizer" : [0],
"bias_init_value" : [0.1], # 0.01
"weights_init" : ["xavier_initializer"],

#"k" : [0],
#"observed_model" : [0,1],

"transfer_fct" : ["elu"], # "relu"
"epochs" : 1000,
# not used anymore, to run on cpu, set used_GPUs = {-1} and then run single
#cpu : 1
},
{
"check_ops" : 0,

# choose steps or epochs
"time_reference" : "epochs",

# how often to log stats (txt) and save summaries (related to the stats)
"stats_period" : 1,

# choose to save the model every n steps
"save_model" : 1,
"save_model_period" : 10,

# how often to save other specific summaries
"save_summaries" : 1,
"save_summaries_period" : 10,

# skips the first k stats for the plot
"plot_offset" : 1,


"dirName" : "/data2/Frey-icml-ws",

"seed" : 0,
"runs" : 1,

"nodes" : [{"used_GPUs" : {0,1,2,3},
            "cores_per_GPU" : 1,
	    "IP": "localhost"   #  num_consumers = multiprocessing.cpu_count() * 2
	   }
	   ]
}
]
