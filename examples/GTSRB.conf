#FF 200

##############################################################
[
{
"dataName" : "GTSRB",  #database name
},
{
"stochastic" : 2,
"stochastic_noise_param" : [0.1],
"model" : "Prediction.ClassificationModel",      # it can be classificiation or regression
#aleatoric / stochastic prediction
"cost_function": [("CrossEntropyWithLogits", {})],

"optimizer": [("AdamOptimizer", {"learning_rate" : 0.0001,
 			         "beta1": 0.9,
                       		 "beta2":0.999})		      ],


"grad_clipping" : ("clip_by_global_norm", {"value" : 100.}),


"batch_size_train" : [32],        #
"batch_size_test" : [32],  #

"network_architecture" : [
        [
        ("VGGBlock", {"channels" : 32, "kernel_shape" : 3, "prob_drop": 0.1}, 0),
 	("VGGBlock", {"channels" : 64, "kernel_shape" : 3, "prob_drop": 0.1, 'linear_last' : [512, 128]}, 0),
	("Linear", {"output_size" : 43}, 0)
	],
],

"activation" : ["relu"], # you can also try "relu"
"weights_init" : [("glorot_normal_initializer", {})],
"bias_init" : [("constant_initializer", {'value' : 0.1})],

"epochs" : 10,                     # number of epochs
},
{
"check_ops" : 0,                # for debug purposes


"time_reference" : "epochs",
"stats_period" : 1,

"save_model" : 1,		# if 1, the model is savedevery X epocs
"save_model_period" : 20,      #0.1,

"plot_offset" : 10,

"save_summaries" : 0,
"save_summaries_period" : 5,

"ImagesInputHook" : {"period" : 1,
                    "how_many" : 18,
                    "n_images_columns" : 6,
                    "until" : 2},


"dirName" : "/data1/temp",
	    			# experiments should besaved in /data2/XXX or /data1/XXX

"seed" : 0,			# do not change
"runs" : 1,			# number of run the algorithm is executed
# set pool size for GPU

"nodes" : [{"used_GPUs" : {1},
            "cores_per_GPU" : 1,
            "IP": "localhost"   #  num_consumers = multiprocessing.cpu_count() * 2
            }
            ]
}
]
