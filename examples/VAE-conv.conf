# convolutional VAE, put your favourite dataset
##############################################################
[
{
"dataName" : "FashionMNIST",
},
{
"model" : "VAE.VAE", #"VAE_IAF"

"stochastic" : [1],
"stochastic_noise_param" : [0.1], #0, ,0.00001,0.001,0.1,1
"denoising" : [1],
"perturbed" : 0,
"rescale" : [1e-5],

"batch_size_train" : [32],
"batch_size_eval" : [32],

"optimizer":  [("AdamOptimizer", {"learning_rate" : 1e-4,
                                          "beta1": 0.9,
                                          "beta2": 0.999})],

"grad_clipping" : ("clip_by_global_norm", {"value": 100.0}),


"cost_function": [
                  ("ELBO", {"beta" : b,
		            "warm_up_method" : ("warm_up", {"epoch" : 5})}) for b in [1.0, 0.1, 1e-2]
		  ],

"samples" : [10], # 1 or more
"covariance_parameterization" : "softplus", # "exp" or "softplus"

"network_architecture" : [
        {
        "encoder" : [
                    ("ConvNet2D", {"output_channels": [256, 512, 1024],
                                   "strides" : [2, 2, 1],
                                   "paddings" : ["SAME"],
                                   "kernel_shapes" : [[3, 3]]
                                   }, 1),
                    ("BatchFlatten", {}, 0),
                    gaussian_layer_triple
                  ],


        "decoder" : [
                    ("Linear", {"output_size" : 7 * 7 * 1024}, 1),
                    ("BatchReshape", {"shape" : (7, 7, 1024)}, 0),
                    ("ConvNet2DTranspose", {"output_channels": [512, 256, 1],
                                            "output_shapes" : [[7, 7], [14, 14], [28, 28]],
                                            "strides" : [1, 2, 2],
                                            "paddings" : ["SAME"],
                                            "kernel_shapes" : [[3, 3]]}, 1),

                    ("BatchFlatten", {}, 0),
                   	("LogitNormalDiagonal", {
                                            "module_tuple" : ("Linear", {}),
                                            "minimal_covariance" : 1e-2}, 0)
                    ]
        }
        for latent_size in [128]
        for gaussian_layer_triple in [
                    ("GaussianDiagonal", {"output_size" : latent_size, "module_tuple" : ("Linear", {})}, 0)] +
                    [("GaussianDiagonal", {"output_size" : latent_size,
                                          "module_tuple" : ("Linear", {}),
                                          "contractive_regularizer" : ("cos_contractive_regularizer",
                                                                        {"scale_mean" : sc,
                                                                        "norm" : 2}),
                    		              },
                    		              0)
                    		              for sc in [100., 10., 1., 1e-1, 1e-2]
                    ]
        ],

"weights_reg" : [("contrib.layers.l2_regularizer", {"scale" : reg}) for reg in [0.01, 0.1]], # [0.0001, 0.001, 0.01]],
"bias_reg" : [("contrib.layers.l2_regularizer",    {"scale" : reg}) for reg in [0.0001]],

#"weights_reg" : [None],
#"bias_reg" :    [None],


"weights_init" : [("contrib.layers.xavier_initializer",{})],
"bias_init" : [("constant_initializer", {'value' : 0.1})],

"activation" : ["relu"],
"epochs" : 300,

},
{
"check_ops" : 0,

"time_reference" : "epochs",

"save_model" : 1,
"save_model_period" : 20, #0.1,

"stats_period" : 1,

"save_summaries" : 1,
"save_summaries_period" : 1,

"plot_offset" : 5,


"GradientsHook" : {"period" : 10},



"ImagesReconstructHook" : {"period" : 20,
                            "n_images_columns" : 6,
                             "images_indexes" : {
                                                "train" : [0,100,200,300,400,500],
                                                "validation" : [0,100,200,300,400,500],
                                                 },
                            },

"ImagesGenerateHook" : {"period" : 20,
                       "n_images_columns" : 6,
                       "n_gen_samples" : 18
                      },

"TwoDimPCALatentVariablesHook" : {"period" : 20,
                                 },

"PCALatentVariablesHook" : {"period" : 20,
                            "create_heatmap": 1
                           },

"ImagesInputHook" : {"period" : 20,
                    "how_many" : 18,
                    "n_images_columns" : 6},



#"LogpImportanceSamplingHook" : {"epoch_period" : 100,
#		       	        "n_samples" : [1,10],
#		     		"batch_size" : 1000,
#				"repetitions" : 3
#                       	       },

#"LogpImportanceSamplingHook" : {"epoch_period" : 100,
#		       	        "n_samples" : [100],
#		     		"batch_size" : 100,
#				"repetitions" : 1
#                      	       },


"dirName" : "/data3",

"seed" : 0,
"runs" : 1,

"nodes" : [{"used_GPUs" : [0,1,2,3,4,5,6,7],
            "cores_per_GPU" : 1,

	    "IP": "localhost"   #  num_consumers = multiprocessing.cpu_count() * 2
	   }
	   ],

}
]
